### File setup
image: node:latest

variables:
  ARTIFACT_NAME: build-v${CI_PIPELINE_IID}
  EBS_APP_NAME: gitlab-learner

stages:
  - install
  - test
  - build
  - review
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ./npm
  policy: pull

before_script:
  - npm ci --cache .npm --prefer-offline

.aws_sync:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - aws s3 sync ./build/ s3://${S3_BUCKET}/${ARTIFACT_NAME}
    - aws elasticbeanstalk create-application-version --application-name ${EBS_APP_NAME} --version-label $CI_PIPELINE_IID --source-bundle S3Bucket=${S3_BUCKET},S3Key=${ARTIFACT_NAME}
    - aws elasticbeanstalk update-environment --application_name ${EBS_APP_NAME} --environment-name "production" --version-label $CI_PIPELINE_IID

### Stages
Run checks and lint:
  stage: test
  script:
    - npm run lint

Run tests:
  stage: test
  script:
    - npm run test

Build app:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - ./build

Review Deploy:
  stage: review
  extends: .aws_sync
  environment:
    name: review/$CI_COMMIT_REF_NAME
  before_script:
    - export S3_BUCKET=${REVIEW_BUCKET_NAME}
  only:
    - ^review/

Staging Deploy:
  stage: deploy
  environment:
    name: Beta
  extends: .aws_sync
  before_script:
    - export S3_BUCKET=${BETA_BUCKET_NAME}
  only:
    - ^develop/

Prod Deploy:
  stage: deploy
  environment:
    name: Production
  # when: manual
  extends: .aws_sync
  before_script:
    - export S3_BUCKET=${PROD_BUCKET_NAME}
  only:
    - master
